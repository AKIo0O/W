{
  "name": "gumbo-parser",
  "version": "0.1.4",
  "author": {
    "name": "Karl Westin",
    "email": "karl.westin@gmail.com"
  },
  "description": "Parsing HTML using google gumbo parser",
  "scripts": {
    "test": "node test/test.js",
    "install": "node-gyp rebuild"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/karlwestin/node-gumbo-parser.git"
  },
  "main": "./node-gumbo",
  "keywords": [
    "html",
    "parser"
  ],
  "devDependencies": {
    "node-gyp": "0.10.x"
  },
  "license": "MIT",
  "engines": {
    "node": ">=0.8"
  },
  "gypfile": true,
  "readme": "# Gumbo Parser\n\n(npm install not fixed on windows yet)\n\nUsing [google's gumbo parser](https://github.com/google/gumbo-parser) to parse HTML in node.\n\n```\nvar gumbo = require(\"gumbo-parser\");\nvar tree = gumbo(htmlstring);\n```\n\n### Usage\n```\nThere's only one method:\ngumbo(htmlstring) \n\nYou can also pass in the options\ngumbo(htmlstring, {\n  // The tab-stop size, for computing positions in source code that uses tabs.\n  // default: 8\n  tabStop: 8,\n  // Whether or not to stop parsing when the first error is encountered.\n  // default: false\n  stopOnFirstError: true\n});\n\nreturns:\n\n{\n  document: {\n    // the document element (see below)\n  },\n\n  root: {\n    // the html element (se 'Element' below)\n  }\n}\n\nElement:\n  nodeName (string) (same as tagname)\n  nodeType (number) 1\n  tagName (string)  (normalized to lowercase)\n  children (array) -> replicating childNodes rather than children,\n                      ie all text / comment children are included\n  attributes (array)\n\nTextNode:\n  nodeName (string) #text or #cdata-section\n  nodeType (number) 3\n  textContent (string)\n\nDocument:\n  nodeName (string) #document\n  nodeType (number) 9\n  children (array)\n  hasDoctype true/false\n  name: (string)            -> see below\n  publicIdentifier (string)       \"\n  systemIdentifier (string)       \"\n\nCommentNode\n  nodeName (string) #comment\n  nodeType (number) 8\n  textContent (string) content comment\n  nodeValue (string) same as textcontent\n\nAttribute\n  name: attribute name\n  value: attribute value (currently always string, doh)\n  nodeType: (number) 2\n```\n\n### About html doctypes\n\nAn html document will always have the `document.name` \"html\".\nIf the document has anything else in the type, for example this html4 doctype:\n\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\"\n        \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n\nthe first part within quotation marks will end up in the `document.publicIdentifier`,\nand the second part will be in `document.systemIdentifier`. You can read more about this here: [http://www.whatwg.org/specs/web-apps/current-work/multipage/syntax.html#syntax-doctype](http://www.whatwg.org/specs/web-apps/current-work/multipage/syntax.html#syntax-doctype).\n\n### Build and test:\n```\nnode-gyp configure\nnode-gyp build\nnpm test\n```\n\n## Changes\n\n**0.1.4** Temporary workaround for the latest changes in node 0.11, thanks [Daniel](https://github.com/TheHydroImpulse)\n\n**0.1.3** Fixes utf-8 bug, thanks [Yonatan](https://github.com/yonatan)\n\n**0.1.2** Taking the (optional) options argument\n          providing publicIdentifier and systemIdentifer for the doctype\n\n**0.1.1** Fix build on node 0.8\n\n**0.1.0** Passing { document: document, root: root } instead of only root\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/karlwestin/node-gumbo-parser/issues"
  },
  "_id": "gumbo-parser@0.1.4",
  "_from": "gumbo-parser@"
}
